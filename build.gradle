buildscript {
    ext {
        springBootVersion = '1.5.1.RELEASE'
    }
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'


sourceCompatibility='1.8'
targetCompatibility='1.8'

group = 'ae.starzplay.assignment'
version '1.0-SNAPSHOT'

war {
    baseName = 'starzplay-assignment'
    version '1.0-SNAPSHOT'
}

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }
}

eclipse {
    classpath {
        defaultOutputDir = file("$buildDir/classes/main/")
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-devtools')
    compile('org.springframework.boot:spring-boot-starter-web')
    providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
    compile('org.springframework.cloud:spring-cloud-starter-config')
    compile('org.springframework.cloud:spring-cloud-starter-eureka')
    compile('org.springframework.cloud:spring-cloud-starter-hystrix')
    compile("io.springfox:springfox-swagger2:2.6.1")
    compile("io.springfox:springfox-swagger-ui:2.6.1")
    testCompile('org.springframework.boot:spring-boot-starter-test')
    compile("org.springframework.data:spring-data-commons:1.11.1.RELEASE")
    compile("net.sourceforge.nekohtml:nekohtml:1.9.22")
    compile("org.apache.commons:commons-collections4:4.1")
    compile("org.apache.commons:commons-lang3:3.4")
    compile("org.projectlombok:lombok:1.16.8")
    compile("org.jsonschema2pojo:jsonschema2pojo-core:0.4.30")
    compile("org.springframework.cloud:spring-cloud-starter-feign")


}

eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Brixton.SR4"
    }
}

bootRun {
    def args = []
    args.add("-Xdebug")
    args.add("-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5006")
    args.add("-DprojectBuildDir=${buildDir}")
    if (project.gradle.startParameter.systemPropertiesArgs['profiles']) {
        println(project.gradle.startParameter.systemPropertiesArgs['profiles']);
        args.add("-Dspring.profiles.active=${project.gradle.startParameter.systemPropertiesArgs['profiles']}")
    }
    setJvmArgs(args)
}
